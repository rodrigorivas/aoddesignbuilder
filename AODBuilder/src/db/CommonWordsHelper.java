package db;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import beans.DBBean;
import beans.DBWord;

public class CommonWordsHelper extends TableHelper{

	private static final String CREATE_TABLE =
		"CREATE TABLE COMMON_WORDS ( " +
			"id INTEGER GENERATED BY DEFAULT AS IDENTITY" +
				"(START WITH 1) NOT NULL PRIMARY KEY, " +
			"language VARCHAR(3), " +
			"word VARCHAR(256))";
	
	private static final String INSERT = 
		"INSERT INTO COMMON_WORDS" +
			"(word,language) " +
		"VALUES (?,?)";
	
	private static final String UPDATE = 
		"UPDATE COMMON_WORDS" +
			"SET word = ?, language = ? " +
		"WHERE id = ?";

	private static final String GET_BY_ID = 
		"SELECT " +
			"id, " +
			"language, " +
			"word " +
		"FROM COMMON_WORDS " +
		"WHERE id = ?";

	private static final String GET_BY_WORD = 
		"SELECT " +
			"id, " +
			"language, " +
			"word " +
		"FROM COMMON_WORDS " +
		"WHERE word = ?";
	
	private static final String GET_LANGUAGE = 
		"SELECT " +
			"LANGUAGE, " +
			"COUNT(*) AS QUANTITY " +
		"FROM COMMON_WORDS " +
		"WHERE <condition> " +
		"GROUP BY LANGUAGE " +
		"ORDER BY QUANTITY DESC";

 
	private static CommonWordsHelper instance;
	
	private CommonWordsHelper(DatabaseManager db) {
		super(db);
	}
	
	public static CommonWordsHelper getInstance(DatabaseManager db){
		if (instance == null)
			instance = new CommonWordsHelper(db);
		
		return instance;
	}

    public int createTable() throws SQLException{
        return db.update(CREATE_TABLE);
    }
    
    @Override
	public int insert(DBBean bean) throws Exception{
    	int ret = 0;
    	if (bean!=null){
    		DBWord word = null;
    		try{
    			word = (DBWord)bean;
    		}catch (Exception e) {
				// TODO: handle exception
    			throw e;
			}
    		PreparedStatement ps = null;
    		try{
		    	ps = db.getPreparedStatement(INSERT);
		    	
		    	ps.setString(1, word.getWord());
		    	ps.setString(2, word.getLanguage());
		    	
		    	ret = ps.executeUpdate();
    		}catch (Exception e) {
				// TODO: handle exception
				throw e;
			}finally{
				if (ps != null)
					ps.close();
			}
    	}
    	
    	return ret;
	}

	@Override
	public int update(DBBean bean) throws Exception {
    	int ret = 0;
		if (bean!=null && bean.getId()!=0){
    		DBWord word = null;
    		try{
    			word = (DBWord)bean;
    		}catch (Exception e) {
				// TODO: handle exception
    			throw e;
			}
    		PreparedStatement ps = null;
    		try{
		    	ps = db.getPreparedStatement(UPDATE);
		    	
		    	ps.setString(1, word.getWord());
		    	ps.setString(2, word.getLanguage());
		    	ps.setInt(3, word.getId());
		    	
		    	ret = ps.executeUpdate();
    		}catch (Exception e) {
				// TODO: handle exception
				throw e;
			}finally{
				if (ps != null)
					ps.close();
			}
		}
		return ret;		
	}

	@Override
	public DBBean getById(int id) throws Exception {
		DBWord word = null;
		if (id != 0){   	
    		PreparedStatement ps = null;
    		try{
		    	ps = db.getPreparedStatement(GET_BY_ID);
		    	
		    	ps.setInt(1, id);
		    	
		    	ResultSet rs = ps.executeQuery(); 

		        if (rs.next()){
		        	word = new DBWord();
		        	word.setId(rs.getInt("id"));
		        	word.setLanguage(rs.getString("language"));
		        	word.setWord(rs.getString("word"));
		        }	

    		}catch (Exception e) {
				// TODO: handle exception
				throw e;
			}finally{
				if (ps != null)
					ps.close();
			}
		}
		return word;
	}

	public DBWord getByWord(String value) throws Exception {
		if (value!=null){
	    	DBWord word = null;
    		PreparedStatement ps = null;
    		try{
		    	ps = db.getPreparedStatement(GET_BY_WORD);
	    	
		    	ps.setString(1, value);
		    	
		    	ResultSet rs = ps.executeQuery(); 
	
		        if (rs.next()){
		        	word = new DBWord();
		        	word.setId(rs.getInt("id"));
		        	word.setLanguage(rs.getString("language"));
		        	word.setWord(rs.getString("word"));
		        }
    		}catch (Exception e) {
				// TODO: handle exception
				throw e;
			}finally{
				if (ps != null)
					ps.close();
			}
    	
	    	return word;
		}
		return null;		
	}

	public String getLanguage(ArrayList<String> words) throws Exception {
		if (words!=null){
    		PreparedStatement ps = null;
    		try{
		    	String condition = "";
	    		
				for (String word: words){
					if (!condition.equals(""))
						condition+=" or ";
					if (!word.equals(""))
						condition+="WORD = '"+word+"'";
				}		    	
				
				String query = GET_LANGUAGE.replaceFirst("<condition>", condition);

				ps = db.getPreparedStatement(query);
		    	
				ResultSet rs = ps.executeQuery(); 
	
		        if (rs.next()){
		        	System.out.println("CANTIDAD: "+rs.getInt("quantity"));
		        	String lang = rs.getString("language");
		        	
		        	if (rs.next()){
			        	System.out.println("CANTIDAD: "+rs.getInt("quantity"));
			        	System.out.println(rs.getString("language"));		        		
		        	}
		        	
		        	return lang;
		        }
    		}catch (Exception e) {
				// TODO: handle exception
				throw e;
			}finally{
				if (ps != null)
					ps.close();
			}
		}
		return null;		
	}
	
	

}
